import React, { useState, useEffect } from 'react';
import {
  View,
  Text,
  StyleSheet,
  ScrollView,
  TouchableOpacity,
  Alert,
  SafeAreaView,
} from 'react-native';
// import { SafeAreaView } from 'react-native-safe-area-context';
import { StatusBar } from 'expo-status-bar';
import {
  Clock,
  MapPin,
  Users,
  CircleCheck as CheckCircle,
  CircleAlert as AlertCircle,
  Navigation,
} from 'lucide-react-native';

export default function Dashboard() {
  const [currentTrip, setCurrentTrip] = useState({
    id: 'TR001',
    route: 'Office Complex A → City Center',
    pickupCount: 6,
    completedPickups: 2,
    startTime: '08:30 AM',
    estimatedEnd: '09:45 AM',
    status: 'active',
  });

  const [isOnline, setIsOnline] = useState(true);
  const [todayStats, setTodayStats] = useState({
    completedTrips: 4,
    totalPickups: 28,
    noShows: 2,
    earnings: 1250,
  });

  const handleGoOnline = () => {
    setIsOnline(!isOnline);
    Alert.alert(
      isOnline ? 'Going Offline' : 'Going Online',
      `You are now ${isOnline ? 'offline' : 'online'} and ${
        isOnline ? 'will not' : 'will'
      } receive new trip requests.`
    );
  };

  const handleEmergency = () => {
    Alert.alert(
      'Emergency Alert',
      'Emergency services have been notified. Your location has been shared with dispatch.',
      [{ text: 'OK' }]
    );
  };

  return (
    <SafeAreaView style={styles.container}>
      <StatusBar style="light" />

      {/* Header */}
      <View style={styles.header}>
        {/* <View>
          <Text style={styles.headerTitle}>Good Morning, Driver</Text>
          <Text style={styles.headerSubtitle}>DL: MH12AB1234</Text>
        </View>
        <TouchableOpacity
          style={[
            styles.statusButton,
            { backgroundColor: isOnline ? '#10B981' : '#EF4444' },
          ]}
          onPress={handleGoOnline}
        >
          <Text style={styles.statusText}>
            {isOnline ? 'ONLINE' : 'OFFLINE'}
          </Text>
        </TouchableOpacity> */}
      </View>

      <ScrollView style={styles.content} showsVerticalScrollIndicator={false}>
        {/* Current Trip Card */}
        {currentTrip && (
          <View style={styles.currentTripCard}>
            <View style={styles.tripHeader}>
              <View style={styles.tripStatus}>
                <View
                  style={[styles.statusDot, { backgroundColor: '#10B981' }]}
                />
                <Text style={styles.tripStatusText}>ACTIVE TRIP</Text>
              </View>
              <Text style={styles.tripId}>{currentTrip.id}</Text>
            </View>

            <Text style={styles.tripRoute}>{currentTrip.route}</Text>

            <View style={styles.tripStats}>
              <View style={styles.statItem}>
                <Users size={16} color="#64748B" />
                <Text style={styles.statText}>
                  {currentTrip.completedPickups}/{currentTrip.pickupCount}{' '}
                  Pickups
                </Text>
              </View>

              <View style={styles.statItem}>
                <Clock size={16} color="#64748B" />
                <Text style={styles.statText}>
                  {currentTrip.startTime} - {currentTrip.estimatedEnd}
                </Text>
              </View>
            </View>

            <View style={styles.progressBar}>
              <View
                style={[
                  styles.progressFill,
                  {
                    width: `${
                      (currentTrip.completedPickups / currentTrip.pickupCount) *
                      100
                    }%`,
                  },
                ]}
              />
            </View>

            <TouchableOpacity style={styles.continueButton}>
              <Navigation size={20} color="#FFFFFF" />
              <Text style={styles.continueButtonText}>Continue Trip</Text>
            </TouchableOpacity>
          </View>
        )}

        {/* Today's Stats */}
        {/* <View style={styles.statsCard}>
          <Text style={styles.cardTitle}>Today's Summary</Text>
          <View style={styles.statsGrid}>
            <View style={styles.statBox}>
              <CheckCircle size={24} color="#10B981" />
              <Text style={styles.statNumber}>{todayStats.completedTrips}</Text>
              <Text style={styles.statLabel}>Completed Trips</Text>
            </View>

            <View style={styles.statBox}>
              <Users size={24} color="#2563EB" />
              <Text style={styles.statNumber}>{todayStats.totalPickups}</Text>
              <Text style={styles.statLabel}>Total Pickups</Text>
            </View>

            <View style={styles.statBox}>
              <AlertCircle size={24} color="#F59E0B" />
              <Text style={styles.statNumber}>{todayStats.noShows}</Text>
              <Text style={styles.statLabel}>No Shows</Text>
            </View>

            <View style={styles.statBox}>
              <Text style={styles.earningsSymbol}>₹</Text>
              <Text style={styles.statNumber}>{todayStats.earnings}</Text>
              <Text style={styles.statLabel}>Earnings</Text>
            </View>
          </View>
        </View> */}

        {/* Quick Actions */}
        {/* <View style={styles.quickActions}>
          <Text style={styles.cardTitle}>Quick Actions</Text>
          <View style={styles.actionGrid}>
            <TouchableOpacity style={styles.actionButton}>
              <MapPin size={24} color="#2563EB" />
              <Text style={styles.actionText}>Navigate to Office</Text>
            </TouchableOpacity>

            <TouchableOpacity style={styles.actionButton}>
              <Clock size={24} color="#10B981" />
              <Text style={styles.actionText}>Break Time</Text>
            </TouchableOpacity>

            <TouchableOpacity
              style={[styles.actionButton, styles.emergencyButton]}
              onPress={handleEmergency}
            >
              <AlertCircle size={24} color="#EF4444" />
              <Text style={[styles.actionText, styles.emergencyText]}>
                Emergency
              </Text>
            </TouchableOpacity>
          </View>
        </View> */}
      </ScrollView>
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#F8FAFC',
  },
  header: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    padding: 20,
    backgroundColor: '#2563EB',
  },
  headerTitle: {
    fontSize: 20,
    fontWeight: '600',
    color: '#FFFFFF',
  },
  headerSubtitle: {
    fontSize: 14,
    color: '#CBD5E1',
    marginTop: 2,
  },
  statusButton: {
    paddingHorizontal: 16,
    paddingVertical: 8,
    borderRadius: 20,
  },
  statusText: {
    color: '#FFFFFF',
    fontSize: 12,
    fontWeight: '600',
  },
  content: {
    flex: 1,
    padding: 20,
  },
  currentTripCard: {
    backgroundColor: '#FFFFFF',
    borderRadius: 16,
    padding: 20,
    marginBottom: 20,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 8,
    elevation: 3,
  },
  tripHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 12,
  },
  tripStatus: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  statusDot: {
    width: 8,
    height: 8,
    borderRadius: 4,
    marginRight: 8,
  },
  tripStatusText: {
    fontSize: 12,
    fontWeight: '600',
    color: '#10B981',
  },
  tripId: {
    fontSize: 14,
    color: '#64748B',
    fontWeight: '500',
  },
  tripRoute: {
    fontSize: 18,
    fontWeight: '600',
    color: '#1E293B',
    marginBottom: 16,
  },
  tripStats: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 16,
  },
  statItem: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  statText: {
    fontSize: 14,
    color: '#64748B',
    marginLeft: 6,
  },
  progressBar: {
    height: 6,
    backgroundColor: '#E2E8F0',
    borderRadius: 3,
    marginBottom: 16,
  },
  progressFill: {
    height: '100%',
    backgroundColor: '#10B981',
    borderRadius: 3,
  },
  continueButton: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: '#2563EB',
    paddingVertical: 14,
    borderRadius: 12,
  },
  continueButtonText: {
    color: '#FFFFFF',
    fontSize: 16,
    fontWeight: '600',
    marginLeft: 8,
  },
  statsCard: {
    backgroundColor: '#FFFFFF',
    borderRadius: 16,
    padding: 20,
    marginBottom: 20,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 8,
    elevation: 3,
  },
  cardTitle: {
    fontSize: 18,
    fontWeight: '600',
    color: '#1E293B',
    marginBottom: 16,
  },
  statsGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'space-between',
  },
  statBox: {
    width: '48%',
    alignItems: 'center',
    padding: 16,
    backgroundColor: '#F8FAFC',
    borderRadius: 12,
    marginBottom: 12,
  },
  statNumber: {
    fontSize: 24,
    fontWeight: '700',
    color: '#1E293B',
    marginTop: 8,
  },
  statLabel: {
    fontSize: 12,
    color: '#64748B',
    marginTop: 4,
    textAlign: 'center',
  },
  earningsSymbol: {
    fontSize: 20,
    fontWeight: '600',
    color: '#10B981',
  },
  quickActions: {
    backgroundColor: '#FFFFFF',
    borderRadius: 16,
    padding: 20,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 8,
    elevation: 3,
  },
  actionGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'space-between',
  },
  actionButton: {
    width: '48%',
    alignItems: 'center',
    padding: 16,
    backgroundColor: '#F8FAFC',
    borderRadius: 12,
    marginBottom: 12,
  },
  actionText: {
    fontSize: 14,
    color: '#1E293B',
    marginTop: 8,
    textAlign: 'center',
    fontWeight: '500',
  },
  emergencyButton: {
    backgroundColor: '#FEF2F2',
    borderColor: '#FECACA',
    borderWidth: 1,
  },
  emergencyText: {
    color: '#EF4444',
  },
});
